{"version":3,"sources":["components/Form.js","components/Table.js","App.js","serviceWorker.js","index.js"],"names":["handleAnySelectChange","event","setFilter","regiao","document","querySelector","value","undefined","local","dia","inicio","Form","props","react_default","a","createElement","className","htmlFor","filter","id","onChange","e","getRegioes","filteredData","map","item","index","key","concat","getLocais","getDias","getInicios","Table","termino","categoria","titulo","acessibilidade","filterResult","result","data","json","arr","indexOf","split","sort","b","join","App","_useState","useState","_useState2","Object","slicedToArray","_useState3","_useState4","setFilteredData","useEffect","filteredResult","components_Form","components_Table","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d635474f.chunk.js","sourcesContent":["import React from 'react';\n\nconst handleAnySelectChange = (event, setFilter) => {\n    const regiao =  document.querySelector('#select-regiao').value === 'undefined' ? undefined : document.querySelector('#select-regiao').value;\n    const local =   document.querySelector('#select-local').value === 'undefined' ? undefined : document.querySelector('#select-local').value;\n    const dia =     document.querySelector('#select-dia').value === 'undefined' ? undefined : document.querySelector('#select-dia').value;\n    const inicio = document.querySelector('#select-horario').value === 'undefined' ? undefined : document.querySelector('#select-horario').value;\n\n    const filter = {\n        regiao,\n        local,\n        dia,\n        inicio\n    };\n\n    setFilter(filter);\n}\n\nconst Form = (props) => {\n    return (\n        <form>\n            <div className=\"row\">\n                <div className=\"col-md-3 form-group\">\n                    <label htmlFor=\"select-regiao\">Selecione uma região:</label>\n                    <select value={ props.filter.regiao } className=\"form-control\" id=\"select-regiao\" onChange={(e) => handleAnySelectChange(e, props.setFilter)}>\n                        <option value={ 'undefined' }>Todas regiões</option>\n                        { props.getRegioes(props.filteredData)\n                            .map((item, index) => (<option key={ `regiao#${ index }` } value={ item }>{ item }</option>))\n                        }\n                    </select>\n                </div>\n                <div className=\"col-md-3 form-group\">\n                    <label htmlFor=\"select-local\">Selecione um local:</label>\n                    <select value={ props.filter.local } className=\"form-control\" id=\"select-local\" onChange={(e) => handleAnySelectChange(e, props.setFilter)}>\n                        <option value={ 'undefined' }>Todos locais</option>\n                        { props.getLocais(props.filteredData)\n                            .map((item, index) => (<option key={ `local#${ index }` } value={ item }>{ item }</option>))\n                        }\n                    </select>\n                </div>\n                <div className=\"col-md-3 form-group\">\n                    <label htmlFor=\"select-dia\">Selecione um dia:</label>\n                    <select value={ props.filter.dia } className=\"form-control\" id=\"select-dia\" onChange={(e) => handleAnySelectChange(e, props.setFilter)}>\n                        <option value={ 'undefined' }>Todos dias</option>\n                        { props.getDias(props.filteredData)\n                            .map((item, index) => (<option key={ `dia#${ index }` } value={ item }>{ item }</option>))\n                        }\n                    </select>\n                </div>\n                <div className=\"col-md-3 form-group\">\n                    <label htmlFor=\"select-horario\">Selecione um horário:</label>\n                    <select value={ props.filter.inicio } className=\"form-control\" id=\"select-horario\" onChange={(e) => handleAnySelectChange(e, props.setFilter)}>\n                        <option value={ 'undefined' }>Todos horários</option>\n                        { props.getInicios(props.filteredData)\n                            .map((item, index) => (<option key={ `inicio#${ index }` } value={ item }>{ item }</option>))\n                        }\n                    </select>\n                </div>\n            </div>\n        </form>\n    );\n}\n\nexport default Form;","import React from 'react';\n\nconst Table = (props) => {\n    return (\n        <div className=\"table-responsive\">\n            <table className=\"table table-striped table-bordered table-hover table-sm\">\n            <thead>\n                <tr>\n                <th>Região</th>\n                <th>Local</th>\n                <th>Dia</th>\n                <th>Horário</th>\n                <th>Categoria</th>\n                <th>Evento</th>\n                <th>Inclusão</th>\n                </tr>\n            </thead>\n            <tbody>\n                {props.filteredData.map((item, index) => (\n                <tr key={`evento#${index}`}>\n                    <td>{item.regiao}</td>\n                    <td>{item.local}</td>\n                    <td>{item.dia}</td>\n                    <td>{`${item.inicio} - ${item.termino}`}</td>\n                    <td>{item.categoria}</td>\n                    <td>{item.titulo}</td>\n                    <td>{item.acessibilidade ? item.acessibilidade : \"-\"}</td>\n                </tr>\n                ))}\n            </tbody>\n            </table>\n        </div>\n        );\n}\n\nexport default Table;","import React, { useState, useEffect } from \"react\";\nimport data from \"./db/data\";\nimport Form from \"./components/Form\";\nimport Table from \"./components/Table\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [filter, setFilter] = useState({\n    regiao: undefined,\n    local: undefined,\n    dia: undefined,\n    inicio: undefined\n  });\n\n  const [filteredData, setFilteredData] = useState(data);\n\n  useEffect(() => { \n    \n    const filteredResult = filterResult(filter);\n    setFilteredData(filteredResult);\n\n  }, [filter]);\n\n  return (\n    <div className=\"container\">\n      <Form\n        filteredData={filteredData}\n        getRegioes={getRegioes}\n        getLocais={getLocais}\n        getDias={getDias}\n        getInicios={getInicios}\n        setFilter={setFilter}\n        filter={filter}\n      />\n      <Table filteredData={filteredData} />\n    </div>\n  );\n};\n\nconst filterResult = (filter) => {\n  let result = data;\n\n  if (filter.regiao !== undefined) {\n    result = result\n      .filter(item => (item.regiao === filter.regiao));\n  }\n  if (filter.local !== undefined) {\n    result = result\n      .filter(item => (item.local === filter.local));\n  }\n  if (filter.dia !== undefined) {\n    result = result\n      .filter(item => (item.dia === filter.dia));\n  }\n  if (filter.inicio !== undefined) {\n    result = result\n      .filter(item => (item.inicio === filter.inicio));\n  }\n\n  return result;\n};\n\nconst getRegioes = json => {\n  return json\n    .map(item => item.regiao)\n    .filter((item, index, arr) => arr.indexOf(item) === index);\n};\n\nconst getLocais = json => {\n  return json\n    .map(item => item.local)\n    .filter((item, index, arr) => arr.indexOf(item) === index);\n};\n\nconst getDias = json => {\n  return json\n    .map(item => item.dia)\n    .filter((item, index, arr) => arr.indexOf(item) === index);\n};\n\nconst getInicios = json => {\n  const unorderedInicioArray = json\n    .map(item => item.inicio)\n    .filter((item, index, arr) => arr.indexOf(item) === index);\n\n  const orderedInicioArray = unorderedInicioArray\n    .map(item => item.split(\"h\")) // Inicio's format: HHhMM (ex.: 00h00 or 23h59)\n    .sort((a, b) => a[0] - b[0])\n    .map(item => item.join(\"h\"));\n\n  return orderedInicioArray;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}